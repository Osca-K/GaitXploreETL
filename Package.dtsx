<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/31/2025 9:21:53 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OSCA"
  DTS:CreatorName="OSCA\oscak"
  DTS:DTSID="{A4C4C2B3-1FB7-4637-8D58-CC13BF6EC1B9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="15"
  DTS:VersionGUID="{BC9DF0BB-0CCD-45F4-883F-A1C1A19DC1B7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Data Connection]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{634C509A-593E-4707-9647-8F09289CD07C}"
      DTS:ObjectName="Data Connection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=OSCA;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{634C509A-593E-4707-9647-8F09289CD07C}Data Connection;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12CEB7F7-782A-47A1-B0D3-26D6431D7FB5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberOfFiles">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{130AC376-7A9B-4031-B362-2D7041DFE1F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathToCSVRawData">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\oscak\Projects\GaitXplore\Data\RawDataStructured</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE08950D-9D08-43FD-8502-9AA0DA4B98F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathToJSONRawData">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\oscak\Projects\GaitXplore\Data\RawData</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5746C7F5-6436-411B-BAE3-20F8EAE95537}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathToUsedJSONFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\oscak\Projects\GaitXplore\Data\RawDataUsedFiles</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ESQLT-Creating Empty Database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{43DE5B6B-8DDA-4ECC-876C-F5C64E59EA9B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ESQLT-Creating Empty Database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{634C509A-593E-4707-9647-8F09289CD07C}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT name &#xA;    FROM sys.databases &#xA;    WHERE name = N'GaitXploreDB'&#xA;)&#xA;BEGIN&#xA;    CREATE DATABASE [GaitXploreDB];&#xA;END;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ST--Structuring JSON to CSV files"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{60FE2B40-6C4D-4A72-BB4C-2D7E08DBAFA4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ST--Structuring JSON to CSV files"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_06e08f649ac544d293f69684557531cf"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::PathToCSVRawData,User::PathToJSONRawData,User::PathToUsedJSONFile"
          ReadWriteVariables="User::NumberOfFiles">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_06e08f649ac544d293f69684557531cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_06e08f649ac544d293f69684557531cf")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_06e08f649ac544d293f69684557531cf.Properties.Settings.get_Default():ST_06e08f649ac544d293f69684557531cf.Properties.Sett" +
    "ings")]

namespace ST_06e08f649ac544d293f69684557531cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using Newtonsoft.Json.Linq;
// To fix CS0246, ensure the Newtonsoft.Json assembly is referenced in your project.
// In Visual Studio, right-click the project > Manage NuGet Packages > Browse for "Newtonsoft.Json" and install it.
// No code changes are needed in this file if the using directive is correct and the package is referenced.
using System.Windows.Forms;
#endregion

namespace ST_06e08f649ac544d293f69684557531cf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            string sPathToJSONRawData = Dts.Variables["PathToJSONRawData"].Value.ToString();
            string sPathToCSVRawData = Dts.Variables["PathToCSVRawData"].Value.ToString();
            string sPathToUsedJSONFile = Dts.Variables["PathToUsedJSONFile"].Value.ToString();
            int iNumberOfFiles = 0;

            string[] sJSONFiles = Directory.GetFiles(sPathToJSONRawData, "*.json");

            foreach (string jsonFile in sJSONFiles)
            {
                try
                {
                    string jsonContent = File.ReadAllText(jsonFile);
                    JObject root = JObject.Parse(jsonContent);

                    var rows = new List<Dictionary<string, string>>();
                    var headers = new HashSet<string>();

                    // add SampleID column
                    headers.Add("SampleID");

                    foreach (var entry in root)
                    {
                        var row = new Dictionary<string, string>();

                        // store outer key as SampleID
                        row["SampleID"] = entry.Key;

                        foreach (var field in (JObject)entry.Value)
                        {
                            row[field.Key] = field.Value.ToString();
                            headers.Add(field.Key);
                        }
                        rows.Add(row);
                    }

                    string fileNameWithoutExt = Path.GetFileNameWithoutExtension(jsonFile);
                    string csvFile = Path.Combine(sPathToCSVRawData, fileNameWithoutExt + ".csv");

                    using (StreamWriter writer = new StreamWriter(csvFile))
                    {
                        // headers
                        string[] headerArray = new List<string>(headers).ToArray();
                        writer.WriteLine(string.Join(",", headerArray));

                        // rows
                        foreach (var row in rows)
                        {
                            List<string> values = new List<string>();
                            foreach (string h in headerArray)
                            {
                                row.TryGetValue(h, out string val);
                                values.Add(val ?? "");
                            }
                            writer.WriteLine(string.Join(",", values));
                        }
                    }

                    // move processed JSON
                    string destFile = Path.Combine(sPathToUsedJSONFile, Path.GetFileName(jsonFile));
                    if (File.Exists(destFile)) File.Delete(destFile);
                    File.Move(jsonFile, destFile);

                    iNumberOfFiles++;
                }
                catch (Exception ex)
                {
                    Dts.Events.FireError(0, "Script Task", $"Error processing {jsonFile}: {ex.Message}", "", 0);
                }
            }

            Dts.Variables["NumberOfFiles"].Value = iNumberOfFiles;




            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_06e08f649ac544d293f69684557531cf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_06e08f649ac544d293f69684557531cf</msb:DisplayName>
    <msb:ProjectId>{D72DE0DC-ECF3-47CE-934B-9CABCEEA0BAE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_06e08f649ac544d293f69684557531cf.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_06e08f649ac544d293f69684557531cf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1481B01D-630B-45DD-AD2F-8C1832BFC1F4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_06e08f649ac544d293f69684557531cf</RootNamespace>
    <AssemblyName>ST_06e08f649ac544d293f69684557531cf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\oscak\AppData\Local\Temp\Vsta\SSIS_ST160\VstaMKnThmaa9EmqeDKae3__mvw\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_06e08f649ac544d293f69684557531cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_06e08f649ac544d293f69684557531cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_06e08f649ac544d293f69684557531cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_06e08f649ac544d293f69684557531cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_06e08f649ac544d293f69684557531cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_06e08f649ac544d293f69684557531cf.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI9BtGgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAhjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
NgAAAAAAAEgAAAACAAUADCQAAHARAAABAAAAAAAAAHw1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwDJAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoCKBAAAApvEQAACnIlAABwbxIAAApvEwAACm8UAAAKCgIoEAAACm8RAAAKckcAAHBv
EgAACm8TAAAKbxQAAAoLFgxybQAAcCgVAAAKDRYTBDgeAgAACREEmhMFEQUoFgAACigXAAAKcxgA
AAoTBnMZAAAKEwcRB3J7AABwbxoAAAombxsAAAoTCjiKAAAAEQpvHAAAChMLcx0AAAoTDBEMcnsA
AHASCygeAAAKbx8AAAoSCyggAAAKdCYAAAFvGwAAChMNKzIRDW8cAAAKEw4RDBIOKB4AAAoSDigg
AAAKbxQAAApvHwAAChEHEg4oHgAACm8aAAAKJhENbyEAAAotxd4MEQ0sBxENbyIAAArcEQYRDG8j
AAAKEQpvIQAACjpq////3gwRCiwHEQpvIgAACtwRBSgkAAAKEwgGEQhyjQAAcCglAAAKKCYAAApz
JwAAChMPEQdzKAAACigpAAAKExARD3KXAABwERAoKgAACm8rAAAKEQZvLAAAChMRK18SESgtAAAK
ExJzLgAAChMTERATFBYTFSsrERQRFZoTFhESERYSF28vAAAKJhETERclLQYmcpsAAHBvMAAAChEV
F1gTFREVERSOaTLNEQ9ylwAAcBETKDEAAApvKwAAChIRKDIAAAotmN4OEhH+FgcAABtvIgAACtze
DBEPLAcRD28iAAAK3AcRBSgzAAAKKCYAAAoTCREJKDQAAAosBxEJKDUAAAoRBREJKDYAAAoIF1gM
3jkTGAIoEAAACm83AAAKFnKdAABwcrUAAHARBXLZAABwERhvOAAACig5AAAKcpsAAHAWbzoAAAom
3gARBBdYEwQRBAmOaT/Y/f//AigQAAAKbxEAAApy3wAAcG8SAAAKCIwuAAABbzsAAAoCKBAAAAoW
bzwAAAoqAAAAQXwAAAIAAADjAAAAPwAAACIBAAAMAAAAAAAAAAIAAACoAAAAnQAAAEUBAAAMAAAA
AAAAAAIAAACdAQAAbAAAAAkCAAAOAAAAAAAAAAIAAABzAQAApgAAABkCAAAMAAAAAAAAAAAAAAB6
AAAA2QEAAFMCAAA5AAAAFwAAAR4CKD0AAAoqHgIoPgAACiqufgEAAAQtHnL7AABw0AMAAAIoPwAA
Cm9AAAAKc0EAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAihCAAAKKi5zCAAA
BoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAWAUAACN+AADEBQAA
cAcAACNTdHJpbmdzAAAAADQNAABwAQAAI1VTAKQOAAAQAAAAI0dVSUQAAAC0DgAAvAIAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAADEAAAAFAAAABgAAAAkAAAABAAAAQgAAAAIA
AAAQAAAAAQAAAAIAAAADAAAABAAAAAcAAAABAAAABgAAAAEAAAABAAAAAABpBAEAAAAAAAYA1QLp
BQYAZAPpBQYAIQLWBQ8AXQYAAAYATgIYBQYAuAIYBQYAmQIYBQYASwMYBQYA9QIYBQYADgMYBQYA
ZQIYBQYAgALRAwoAKQMYBAoAiwEYBAYAJwCTAAYAQwCTAA4AHQCTAAYADwCTAAYANACTABIAuwRQ
BQYAjQVZAD8AvgUAAAYAKgWjBAYAqgSjBAYABALWBQYABgejBAYAaQUJBgYARAUDBRYAzQFTBBYA
NQJTBBYApwHuBAYA6QHpBQoAQQQYBBoAnwYYARoAzgAYAQYAZgdZAAYABwFZABIABQdQBQYArwW7
BgYA1wCjBAYA9ANZAAYA7QOjBAYAAQCTAAYAmgVZAAoAeQUYBAYALgCjBAYASgGjBAYA4wCjBAYA
XQcYBQAAAABQAAAAAAABAAEAAQAQAMIErQM5AAEAAQAAABAAEAZsBmkAAQADAAABEACyBmwGfQAD
AAcAAwEAAN4GAABhAAQACgARAK8EvgERAHsBwgERALIAxgEGBoIAygFWgM4GzQFWgFsBzQFQIAAA
AACGAMgEBgABAKQjAAAAAIYYyQUGAAEArCMAAAAAgxjJBQYAAQC0IwAAAACTCGUF0QEBAOAjAAAA
AJMIYwHWAQEA5yMAAAAAkwhvAdsBAQDvIwAAAACWCA0H4QECAPYjAAAAAIYYyQUGAAIA/iMAAAAA
kRjPBeYBAgAAAAEAogMJAMkFAQARAMkFBgAZAMkFCgApAMkFEAAxAMkFEAA5AMkFEABBAMkFEABJ
AMkFEABRAMkFEABZAMkFEABhAMkFEABpAMkFBgDJAMkFBgDxAMkFFQABAckFBgBxANYGgAAJAZsG
hgARAZEEjAAZAYIDkwDRAOsDlwAhAakGmwApAT0HogAxAccBpwAMAMkFBgAUAMkFBgAUAK4AvwAx
AbsFxQAcACgH3wAkAMkFBgAsAFEH3wAkAJoE8wAsAIID+wA5ATQHAAFBAb8BBgAMAK4ABAFJAdIE
ogBRAf4GCgFJAUIBCgGpAMkFEAA0AMkFFgE0AEkHIQFRAc0EJwFhATgBEAAMALsFLgE8ACgH3wA0
AMkFBgAkAJYDQgE0AK4ABAFRAc0ESwE8ADQHAAFJAQwBogApAfcGVgEpAeIBWwEpAagDYAEJAewG
ZgG5AMIAlwBRAf4GbAFpAaUFdAEZAYwDfQEJARkHAQBxAMkFBgDRAMkFBgB5AfUAggF5AVkHiwHZ
AMkFkQH5AMkFBgAIABQAtAEIABgAuQEpAHMAIQIuAAsA+QEuABMAAgIuABsAIQIuACMAKgIuACsA
UwIuADMAUwIuADsAUwIuAEMAKgIuAEsAWQIuAFMAUwIuAFsAcAJDAGMAuQFJAHMAIQJhAHsAuQFj
AGsAuQEbAAMAAQAEAAMAAABpBeoBAACDAe8BAAARB/QBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcA
rgC5ANMA5ADrABABNwEEgAAAAQAAAJ4kl2YAAAAAAACtAwAABAAAAAAAAAAAAAAAmQGKAAAAAAAQ
AAAAAAAAAAAAAACiAfkDAAAAAAQAAAAAAAAAAAAAAJkBTwEAAAAADQAAAAAAAAAAAAAAqwE0BQAA
AAAEAAAAAAAAAAAAAACZAaMEAAAAABAAAAAAAAAAAAAAAKIBYwAAAAAAAAAAAAEAAAAaBgAABQAC
AAAAAElFbnVtZXJhYmxlYDEASUVudW1lcmF0b3JgMQBIYXNoU2V0YDEATGlzdGAxAEludDMyAEtl
eVZhbHVlUGFpcmAyAERpY3Rpb25hcnlgMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdl
bmVyaWMAQWRkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBJRGlzcG9zYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAEdldEZpbGVOYW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3JpdGVMaW5lAENvbWJpbmUAVHlwZQBTeXN0
ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9z
ZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBz
ZXRfVmFsdWUAVHJ5R2V0VmFsdWUAdmFsdWUATW92ZQBTVF8wNmUwOGY2NDlhYzU0NGQyOTNmNjk2
ODQ1NTc1MzFjZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzA2ZTA4
ZjY0OWFjNTQ0ZDI5M2Y2OTY4NDU1NzUzMWNmLmRsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0A
RW51bQByZXNvdXJjZU1hbgBKVG9rZW4AU2NyaXB0TWFpbgBKb2luAEdldEZpbGVOYW1lV2l0aG91
dEV4dGVuc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24ATmV3dG9uc29mdC5Kc29uAEN1bHR1cmVJbmZvAE5ld3Rv
bnNvZnQuSnNvbi5MaW5xAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBT
dHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBGaXJlRXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRv
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8wNmUwOGY2NDlhYzU0NGQyOTNmNjk2ODQ1NTc1
MzFjZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMDZl
MDhmNjQ5YWM1NDRkMjkzZjY5Njg0NTU3NTMxY2YuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdl
dEZpbGVzAFNldHRpbmdzAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBnZXRfRXZlbnRzAEV4aXN0cwBDb25jYXQASk9iamVjdABnZXRfRGVmYXVsdABzZXRf
VGFza1Jlc3VsdABnZXRfQ3VycmVudABNb3ZlTmV4dABSZWFkQWxsVGV4dABUb0FycmF5AGdldF9L
ZXkAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAI1AAYQB0AGgAVABvAEoAUwBPAE4AUgBhAHcARABh
AHQAYQAAIVAAYQB0AGgAVABvAEMAUwBWAFIAYQB3AEQAYQB0AGEAACVQAGEAdABoAFQAbwBVAHMA
ZQBkAEoAUwBPAE4ARgBpAGwAZQAADSoALgBqAHMAbwBuAAARUwBhAG0AcABsAGUASQBEAAAJLgBj
AHMAdgAAAywAAAEAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAI0UAcgByAG8AcgAgAHAAcgBvAGMA
ZQBzAHMAaQBuAGcAIAAABToAIAAAG04AdQBtAGIAZQByAE8AZgBGAGkAbABlAHMAAHFTAFQAXwAw
ADYAZQAwADgAZgA2ADQAOQBhAGMANQA0ADQAZAAyADkAMwBmADYAOQA2ADgANAA1ADUANwA1ADMA
MQBjAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAI0ek8II
FaFHo/aMqFnBNoAABCABAQgDIAABBSABARERBCABAQ4FIAEBEXVkBxkODggdDggOFRI9ARUSQQIO
DhUSRQEODg4VEkkBFRFNAg4SURURTQIOElEVEkECDg4VEkkBFRFNAg4SURURTQIOElESVR0OFRFZ
ARUSQQIODhUSQQIODhUSPQEOHQ4IDg4SXQUgABKAhQUgABKAiQYgARKAjRwDIAAcAyAADgYAAh0O
Dg4EAAEODgYAARKAmQ4KFRI9ARUSQQIODgUVEkUBDgUgAQITAA0gABUSSQEVEU0CDhJRCxUSSQEV
EU0CDhJRBCAAEwAGFRJBAg4OBxURTQIOElEHIAIBEwATAQQgABMBAyAAAgUgAQETAAUAAg4ODgUV
Ej0BDgogAQEVEoCtARMABSAAHRMABgACDg4dDgggABURWQETAAoVEVkBFRJBAg4OCCACAhMAEBMB
CgACDg4VEoCtAQ4EAAECDgQAAQEOBQACAQ4OBSAAEoC1BwAEDg4ODg4IIAUCCA4ODggEIAEBHAgA
ARKAvRGAwQUgABKAxQcgAgEOEoDFCLd6XFYZNOCJCImEXc2AgMyRCDCtT+aypq7tBAAAAAAEAQAA
AAMGEm0DBhJxAwYSEAIGCAMGERQEAAASbQQAABJxBQABARJxBAAAEhADAAABBAgAEm0ECAAScQQI
ABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
VF8wNmUwOGY2NDlhYzU0NGQyOTNmNjk2ODQ1NTc1MzFjZgAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFw2AAAAAAAAAAAAAHY2AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoNgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAJdmniQAAAEAl2aeJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMAA2AGUAMAA4AGYANgA0ADkAYQBjADUANAA0AGQAMgA5ADMAZgA2ADkANgA4ADQANQA1
ADcANQAzADEAYwBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MwA3ADQALgAyADYAMgA2ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMAA2AGUAMAA4AGYANgA0ADkAYQBjADUANAA0AGQAMgA5ADMAZgA2ADkANgA4ADQANQA1ADcA
NQAzADEAYwBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAwADYAZQAwADgAZgA2ADQAOQBhAGMANQA0ADQAZAAyADkAMwBmADYAOQA2ADgA
NAA1ADUANwA1ADMAMQBjAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMAA2AGUAMAA4AGYANgA0ADkAYQBjADUANAA0AGQAMgA5ADMAZgA2ADkANgA4ADQA
NQA1ADcANQAzADEAYwBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADMANwA0AC4AMgA2ADIANgAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADMANwA0AC4AMgA2ADIANgAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="238.5,42"
          Id="Package\ST--Structuring JSON to CSV files"
          TopLeft="47.5,37.3749998143563" />
        <NodeLayout
          Size="237,42"
          Id="Package\ESQLT-Creating Empty Database"
          TopLeft="340,40.0833331342373" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>